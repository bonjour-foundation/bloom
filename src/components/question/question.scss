/**
 * @prop --question-background: The background of the question's container, default #ffffff.
 * @prop --question-border-sizing: The box sizing property of the question's container, default border-box.
 * @prop --question-padding: The padding of the question's container, default 16px 32px.
 * @prop --question-width: A width for the question's container.
 * @prop --question-low-padding: The padding of the low placeholder.
 * @prop --question-high-padding: The padding of the high placeholder.
 */

:host {
  display: block;
  background: var(--question-background, #ffffff);
  padding: var(--question-padding, 16px 32px);
  width: var(--question-width);
  box-sizing: var(--question-border-sizing, border-box);
}

div.range {
  display: grid;
  grid-template-columns: 50% 50%;
  grid-template-rows: auto;

  bonjour-range {
    grid-column-start: 1;
    grid-column-end: span 2;
    grid-row-start: 1;
    grid-row-end: 1;
  }

  slot[name="low"],
  slot[name="high"] {
    grid-row-start: 2;
    grid-row-end: 2;
  }

  slot[name="low"] {
    grid-column-start: 1;
    grid-column-end: 1;
  }

  slot[name="high"] {
    grid-column-start: 2;
    grid-column-end: 2;
  }
}

::slotted([slot="low"]) {
  padding: var(--question-low-padding, 8px 0);
}

::slotted([slot="high"]) {
  padding: var(--question-low-padding, 8px 0);
}

::slotted([slot="high"]) {
  justify-self: flex-end;
}
